---
- name: Create directory for ssh keys for access to kraken clusters managed by {{ ci_hostname }}
  file: path="{{ ci_container_path }}/keys/" state=directory

- name: Get ssh keys for access to kraken clusters managed by {{ ci_hostname }}
  s3:
    aws_access_key: "{{ aws_key }}"
    aws_secret_key: "{{ aws_secret }}"
    region: "{{ aws_region }}"
    overwrite: True
    bucket: "{{ config_bucket }}"
    object: keys/{{ ci_hostname }}/{{ item }}
    dest: "{{ ci_container_path }}/keys/{{ item }}"
    mode: get
  with_items:
    - id_rsa
    - id_rsa.pub

- name: Build jenkins contianer
  shell: docker build -t {{ ci_container_tag }} {{ ci_container_path }}

- name: Create directory for docker config
  file: path="{{ secrets_dir }}/docker/" state=directory

- name: Get docker config for push access to private repos
  s3:
    aws_access_key: "{{ aws_key }}"
    aws_secret_key: "{{ aws_secret }}"
    region: "{{ aws_region }}"
    overwrite: True
    bucket: "{{ config_bucket }}"
    object: secrets/{{ ci_hostname }}/{{ item }}
    dest: "{{ secrets_dir }}/{{ item }}"
    mode: get
  with_items:
    - docker/config.json

- name: Run jenkins container
  docker:
    name: "{{ ci_container_name }}"
    docker_api_version: "{{ docker_api_version }}"
    image: "{{ ci_container_tag }}"
    state: started
    pull: missing
    net: bridge
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes_from:
      - "{{ data_container_name }}"
    env:
      VIRTUAL_HOST: "{{ ci_hostname }}"
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: "{{ci_hostname}}"
      LETSENCRYPT_EMAIL: "{{ci_email}}"
      LETSENCRYPT_TEST: "{{test_instance}}"
      MACHINE_STORAGE_PATH: "/var/jenkins_home/.docker/machine"
    volumes:
      - /var/run/docker.sock:/run/docker.sock
      - /usr/bin/docker:/bin/docker
      - /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02
      - /var/run:/ansible
      - /var/lib/docker/gobuild:/var/lib/docker/gobuild
      - "{{ secrets_dir }}/docker/config.json:/root/.docker/config.json:ro"

- name: Try updating jenkins jobs in jenkins container
  shell: docker exec {{ ci_container_name }} jenkins-jobs update --recursive --exclude /etc/jenkins_jobs/jobs/excluded-on-jenkins /etc/jenkins_jobs
  register: result
  until: result.rc == 0
  retries: 5
  delay: 5
