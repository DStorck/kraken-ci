<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>kicks off 100 node autotest every 4 hours</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.6">
      <useBuildBlocker>true</useBuildBlocker>
      <blockingJobs>kubernetes_autotest_1000</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.12.0">
      <projectUrl>https://github.com/Samsung-AG/kraken/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>KUBE_TESTS_REPO</name>
          <description>Kubernetes conformance tests repo</description>
          <defaultValue>https://github.com/Samsung-AG/kubernetes.git</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>KUBE_TESTS_BRANCH</name>
          <description>Kubernetes conformance tests branch</description>
          <defaultValue>density-1.1</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H */4 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># build the tests
rm -rf /var/lib/docker/gobuild/kubernetes_autotest
cd /var/lib/docker/gobuild
git clone -b ${KUBE_TESTS_BRANCH} ${KUBE_TESTS_REPO} ./kubernetes_autotest
cd kubernetes_autotest
make clean
yes | make quick-release

# create kube config
cat &gt; /var/lib/docker/gobuild/kubernetes_autotest/kubeconfig &lt;&lt;EOF
apiVersion: v1
clusters:
- cluster:
    api-version: v1
    server: http://pipeletautotest-master.kubeme.io:8080
  name:
contexts: []
current-context: &quot;&quot;
kind: Config
preferences: {}
users: []
EOF</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.27">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>KUBERNETES_BINARIES_URI=https://storage.googleapis.com/kubernetes-release/release/v1.0.6/bin/linux/amd64
NUMBER_OF_NODES=100
DENSITIES=&quot;3 15 30&quot;</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>kubernetes_autotest</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>kubernetes_autotest</project>
      <filter></filter>
      <target>kubernetes_1.0.6</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.LastCompletedBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.27">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>KUBERNETES_BINARIES_URI=https://s3-us-west-2.amazonaws.com/sundry-automata/hyperkube/1524d74
NUMBER_OF_NODES=100
DENSITIES=&quot;3 15 30&quot;</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>kubernetes_autotest</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>kubernetes_autotest</project>
      <filter></filter>
      <target>kubernetes_1.1</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.LastCompletedBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.27">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>KUBERNETES_BINARIES_URI=https://s3-us-west-2.amazonaws.com/sundry-automata/hyperkube/dbb37d9
NUMBER_OF_NODES=100
DENSITIES=&quot;3 15 30&quot;</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>kubernetes_autotest</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>kubernetes_autotest</project>
      <filter></filter>
      <target>kubernetes_trunk</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.LastCompletedBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
  </publishers>
  <buildWrappers/>
</project>