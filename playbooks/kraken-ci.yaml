- hosts: coreos
  gather_facts: False
  roles:
    - defunctzombie.coreos-bootstrap
  tasks:
    - name: Install docker-py
      pip: name=docker-py
    - name: Copy config/ dir over
      synchronize:
        src: ../config/
        dest: ~/config/
        recursive: yes
    - name: Jenkins Data Volume Build
      shell: docker build -t samsung_ag/jenkins-data /home/core/config/data_volume
    - name: Jenkins Server Build
      shell: docker build -t samsung_ag/jenkins-server /home/core/config/jenkins
    - name: Jenkins Backup Helper Build
      shell: docker build -t samsung_ag/jenkins-backup /home/core/config/backup
    - name: HashiCorp Vault Build
      shell: docker build -t samsung_ag/hashicorp-vault /home/core/config/vault
    - name: Kill off containers
      shell: docker rm -f jenkins-data jenkins-backup nginx docker-gen jenkins
      ignore_errors: yes
    - name: Jenkins Data Volume Run
      docker:
        name: jenkins-data
        docker_api_version: "{{ docker_api_version }}"
        image: samsung_ag/jenkins-data
        state: started
        pull: missing
        net: bridge
    - name: Jenkins Backup Helper Run
      docker:
        name: jenkins-backup
        docker_api_version: "{{ docker_api_version }}"
        image: samsung_ag/jenkins-backup
        state: started
        pull: missing
        net: bridge
        command: s3://pipelet 60 /var/jenkins_home/jobs/
        volumes_from:
          - jenkins-data
        env:
          AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
          AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    - name: Official NGINX
      docker:
        name: nginx
        docker_api_version: "{{ docker_api_version }}"
        image: nginx
        state: started
        pull: missing
        tty: yes
        net: bridge
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /tmp/nginx:/etc/nginx/conf.d
          - /home/core/config/nginx/certs:/etc/nginx/certs
    - name: NGINX autoconfig
      docker:
        name: docker-gen
        docker_api_version: "{{ docker_api_version }}"
        image: jwilder/docker-gen
        state: started
        pull: missing
        tty: yes
        net: bridge
        command: -notify-sighup nginx -watch -only-exposed /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
        volumes_from:
          - nginx
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock
          - /home/core/config/nginx/conf:/etc/docker-gen/templates
    - name: Jenkins server
      docker:
        name: jenkins
        docker_api_version: "{{ docker_api_version }}"
        image: samsung_ag/jenkins-server
        state: started
        pull: missing
        net: bridge 
        ports:
          - "8080:8080"
          - "50000:50000"
        volumes_from:
          - jenkins-data
        env:
          VIRTUAL_HOST: pipelet.kubeme.io
          VIRTUAL_PORT: 8080
          HIPCHAT_TOKEN: "{{ hipchat_api_token }}"
          HIPCHAT_ROOM_ID: "{{ hipchat_room_id }}"
        volumes:
          - /var/run/docker.sock:/run/docker.sock
          - /usr/bin/docker:/bin/docker
          - /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02
          - /var/run:/ansible
          - /var/lib/docker/gobuild:/var/lib/docker/gobuild
